@model DrugsSystem.WebUI.Models.DrugUnitWithDepotViewModel

@{
    ViewBag.Title = "DrugUnitDepot";
}

<h2>DrugUnitDepot</h2>

<div>
    <table id="grid"></table>
    <div id="pager"></div>
</div>

@using (Html.BeginForm())
{
    <input type="submit" class="btn btn-primary" value="Save" />
 
        <table>
            @for (int i = 0; i < Model.DrugUnits.Count; i++)
            {
                <tr>
                    <td>
                        @Html.HiddenFor(x => x.DrugUnits[i].DrugUnitID, Model.DrugUnits[i].DrugUnitID)
                        @Html.HiddenFor(x => x.DrugUnits[i].DrugUnitPickNumber, Model.DrugUnits[i].DrugUnitPickNumber)

                        @Html.LabelFor(x => x.DrugUnits[i].DrugUnitPickNumber, Model.DrugUnits[i].DrugUnitPickNumber)
                    </td>
                    <td>
                        @Html.ValueFor(x => x.DrugUnits[i].DrugUnitPickNumber, Model.DrugUnits[i].DrugUnitPickNumber.ToString())
                    </td>
                    <td>
                        @Html.DropDownListFor(x => x.DrugUnits[i].SelectedDepotID, Model.SelectItem(Model.Depots, Model.DrugUnits[i].SelectedDepotID), new { @class = "form-control" })
                    </td>
                </tr>
            }
        </table>
        for (int j = 0; j < Model.Depots.Count; j++)
        {
            @Html.HiddenFor(model => Model.Depots[j].Selected)
            @Html.HiddenFor(model => Model.Depots[j].Text)
            @Html.HiddenFor(model => Model.Depots[j].Value)
        }
}

@*
    /*
     * 
     *
     */   
*@

@section scripts{
    <script type="text/javascript">

            $('document').ready(function () {
                console.log('ready');
                $("#grid").jqGrid({
                    url: '@Url.Action("GetData")',
                    dataType: 'json',
                    mtype: 'Get',
                    colNames: ['id', 'cell'],
                    colModel: [
                        { key: true, index: 'name', label: 'name', name: 'name', width: 200, editable: false },
                        { key: false, index: 'surname', label: 'surname', name: 'surname', width: 200, editable: false }
                    ],
                    pager: { enable: true, limit: 5, sizes: [2, 5, 10, 20] },
                    width: 750,
                    rowNum: 10,
                    rowList: [10, 20, 30, 40],
                    height: '100%',
                    viewrecords: true,
                    caption: 'list',
                    emptyrecords: 'no records to display'/*,
                    jsonReader: {
                        total: 'total',
                        page: 'page',
                        records: 'records',
                        root: 'rows',
                        cell: 'cell',
                        id: 'id'
                    }*/
                    /*,
                    
                    columnsresize: true,
                    uiLibrary: "bootstrap",
                    initeditor: function (row, cellvalue, editor, celltext, cellwidth, cellheight) {
                        console.log('dropdown editor init');
                        editor.jqxDropDownList({
                            focus: function () {
                                console.log('get focus');
                            },
                            source: dataAdapter.records[row].locations
                        });
                    }
                    */
                });
            });

    </script>
}